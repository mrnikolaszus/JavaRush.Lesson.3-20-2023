Вам нужно реализовать структуру сотрудников IT компании. В компании есть три типа сотрудников: developer, lead, manager.
В начале каждого дня сотрудник должен отметить,
что он начал работу и в конце дня также сказать, что он ее закончил, только в таком случае
ему засчитают рабочий день.
Так же менеджер не работает во вторник,а лид не может работать в понедельник.
В компании существует система бонусов, то есть, как только человек начинает работать,
то он автоматом получает дополнительные бонусы.
 Для девелопера - 3, для лида - 2, для менеджера - 1.
Во время работы у работников появляются задачи, которые надо выполнить,
но в правилах компании строго описано, что:
manager может делегировать задачи только лиду (если он работает)
лид может делегировать задачи только разработчикам (если он работает)
разработчики могут только выполнять задачи
делегировать задачи можно только работающим сотрудникам
Для выплаты бонусов всем сотрудникам компания придумала систему подсчета рейтинга,
 где у каждого работника будет свой рейтинг,
  который рассчитывается в зависимости от типа и количества его рабочих дней по формуле:
   сумма коэффициентов дней недели / кол-во отработанных дней.
Что поможет в правильном выполнении задания:
OOP, abstract classes, interfaces
enums (рассмотрите вариант получения enum с помощью String)
custom Exceptions
Collections (find the appropriate collection for the business logic)
instanceof
switch
-----
Спустя время компания поняла, что расчет рейтинга основываясь только на днях не совсем логичен и решило добавить еще дополнительные баллы за выполнение задач.
Задачи могут выполнять только разработчики. Можно выполнять только задачи, которые тебе делегировали сегодня. Задача может быть выполнена один раз в день. В день может быть несколько задач.
Исходя из этого формула рейтинга будет немного другой: (сумма коэффициентов дней недели / кол-во отработанных дней) + сумма выполненных задач * коэффициент по дню выполнения.
Что поможет в правильном выполнении задания:
String parsing
Arrays (find the right type)